version: '3'

services:

  app:
    build: app
    env_file:
      - ./.env_example
    entrypoint: /opt/app/entrypoint.sh
    restart: unless-stopped
    depends_on:
      elastic:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
  
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    restart: unless-stopped
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    healthcheck:
      test: curl -s http://elastic:9200 >/dev/null || exit 1
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7.4.0
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  nginx:
    image: nginx:1.27.0-alpine
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/app.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    command: [nginx-debug, '-g', 'daemon off;']
    depends_on:
      - app
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
    

volumes: 
  elastic_data:
  redis_data:
